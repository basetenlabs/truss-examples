model_name: DeepSeek-V3-0324 TRT
python_version: py39
resources:
  accelerator: B200:8
  cpu: "1"
  memory: 10Gi
  use_gpu: true
model_metadata:
  example_model_input: {
    "model": "deepseek-ai/DeepSeek-V3-0324",
    "messages": [
      {
      "role": "user",
      "content": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. class Solution: def twoSum(self, nums: List[int], target: int) -> List[int]:"
      }
    ],
    "stream": true,
    "max_tokens": 2048,
    "temperature": 0.5
  }
trt_llm:
  build:
    checkpoint_repository:
      repo: baseten/DeepSeek-V3-FP4
      revision: main
      source: HF
  inference_stack: v2
  runtime:
    enable_chunked_prefill: true
    max_batch_size: 64
    max_num_tokens: 8192
    max_seq_len: 98304
    tensor_parallel_size: 8
    served_model_name: deepseek-ai/DeepSeek-V3-0324
    patch_kwargs:
      disable_overlap_scheduler: True
      guided_decoding_backend: "xgrammar"
      moe_expert_parallel_size: 4
      speculative_config:
        decoding_type: MTP
        num_nextn_predict_layers: 3

      kv_cache_config:
        free_gpu_memory_fraction: 0.8
        enable_block_reuse: true

      cuda_graph_config:
        padding_enabled: true
      enable_iter_perf_stats: true
      autotuner_enabled: false
      tool_call_parser: deepseekv3
