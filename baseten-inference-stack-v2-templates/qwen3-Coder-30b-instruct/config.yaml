model_metadata:
  example_model_input:
    messages:
    - content: You are a helpful assistant
      role: system
    - content: "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. class Solution: def twoSum(self, nums: List[int], target: int) -> List[int]:"
      role: user
    model: Qwen/Qwen3-Coder-30B-A3B-Instruct-FP8
model_name: Inference Stack V2 qwen3 moe
python_version: py39
resources:
  accelerator: H100:1
  cpu: '1'
  memory: 10Gi
  use_gpu: true
trt_llm:
  build:
    checkpoint_repository:
      repo: Qwen/Qwen3-Coder-30B-A3B-Instruct-FP8
      revision: main
      source: HF
  inference_stack: v2
  runtime:
    enable_chunked_prefill: true
    max_batch_size: 64
    max_num_tokens: 8192
    max_seq_len: 131072
    patch_kwargs:
      cuda_graph_config:
        enable_padding: true
      enable_autotune: 0
      enable_iter_perf_stats: 0
      kv_cache_config:
        enable_block_reuse: true
        free_gpu_memory_fraction: 0.8
    served_model_name: Qwen/Qwen3-Coder-30B-A3B-Instruct-FP8
    tensor_parallel_size: 1
